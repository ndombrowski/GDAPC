# Introduction into (R) Programming

**Computer programming** refers to giving instructions to a computer to perform an action or set of actions. **Programming languages** are the words and symbols we use to write instructions for computers to follow. Programming languages have their own set of rules for how these words and symbols should be used, called **syntax**. **Coding** is writing instructions to the computer in the syntax of a specific programming language.

**R** is a programming language frequently used for statistical analysis, visualization and other data analysis. R is based on another programming language named S. In the 1970s, John Chambers created S for internal use at Bell Labs, a famous scientific research facility. The title R refers to the first names of its two authors and plays on a single- letter title of its predecessor S. 

**RStudio**'s an IDE or integrated development environment. This means that RStudio brings together all the tools you might want to use in a single place. There are two main ways of writing code in RStudio: using the console or using the source editor. You can type commands directly into the console, but they'll be forgotten when you close your current session. 

**Packages** are units of reproducible R code. Members of the R community create packages to keep track of the R functions that they write and reuse. Packages offer a helpful combination of code, reusable R functions, descriptive documentation, tests for checking your code, and sample data sets. 

The lubridate package that you are about to install is part of the tidyverse. The **tidyverse** is a collection of packages in R with a common design philosophy for data manipulation, exploration, and visualization. For a lot of data analysts, the tidyverse is an essential tool. You will learn more about the tidyverse later on in this course.


## Installing packages

```{r}
#| eval: false
install.packages("tidyverse")
```


## Loading a library

```{r}
# | warning: false
library(tidyverse)
```
