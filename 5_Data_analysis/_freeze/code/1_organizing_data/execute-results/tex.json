{
  "hash": "48bc5310be95eb1c6be15eba82a92f68",
  "result": {
    "markdown": "---\nengine: knitr\nexecute: \n  eval: false\n---\n\n\n\n\n# Organizing the data to begin analysis\n\n## Basics\n\n**Analysis** is the process used to make sense of the data collected. The goal of analysis is to identify trends and relationships within the data so that you can accurately answer the question you're asking. To do this, you should stick to the 4 phases of analysis:\n\n1. Organize data:  A data analyst uses data organization to decide which data is relevant to their analysis and which data types and variables are appropriate\n2. Format and adjust data\n3. Get input from others\n4. Transform data\n\n\n## Organzing data\n\nSorting and filtering are two ways you can keep things organized when you format and adjust data to work with it.  For example, a filter can help you find errors or outliers so you can fix or flag them before your analysis. **Outliers** are data points that are very different from similarly collected data and might not be reliable values. \n\nExamples were run with BigQuery using `data/movie_data.csv`\n\n\n### Spreadsheets\n\nIf **Sort sheet** is applied, all of the data in a spreadsheet is sorted by the conditions of a single column, but the related information across each row stays together.\n\n**Sort range** doesn't keep the information across rows together. When you sort a range, you're selecting a specific collection of cells or the range that you want the sorting limited to. Nothing else on the spreadsheet gets rearranged but the specified cells.\n\nA formula do use is the **sort function**, i.e. `=SORT(A2:D6, 2, TRUE)`\n\n1. Start with the first cell the data is collected from and separate with a colon until the last cell we want to include\n2. After the comma, to separate the range from what we are sorting by: column B. You should keep in mind that this part of the function doesn't recognize column letters. So in this case, we use the corresponding number instead, which is 2, since column B is the second column in our range.\n3. In this next part you'll need to decide whether you want the data in this column to be in ascending or descending order. A TRUE statement is in ascending order, and FALSE is descending. \n\nA **customized sort order** is when you sort data in a spreadsheet using multiple conditions. This means that sorting will be based on the order of the conditions you select. You can do that easily with the \"Sort range\" and \"advanced sorting\" option under Data.\n\nSimilar to the SORT function in Google Sheets, Excel includes custom sort capabilities that are available from the menu. After you select the data range, click the Sort & Filter button to select the criteria for sorting.\n\n\n### SQL\n\nYou can use the **ORDER BY** clause to sort results returned in a query. By default, the ORDER BY clause sorts data in ascending order. \n\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT * \nFROM `lithe-vault-366813.movie_data.movies`\nORDER BY Release_Date DESC\n```\n:::\n\n\n\nCombine sorting and filtering. First, we'll check that the ORDER BY clause is always the last line. That makes sure that all the results of the query you're running are sorted by that clause. Then, we'll add a new line for the WHERE clause after FROM and before ORDER BY.\n\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT * \nFROM `lithe-vault-366813.movie_data.movies`\nWHERE Genre = 'Comedy'\nORDER BY Release_Date DESC\n```\n:::\n\n\n\nWe can also filter for two conditions at once using the AND filter. \n\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT * \nFROM `lithe-vault-366813.movie_data.movies`\nWHERE Genre = 'Comedy' AND Revenue > 3000000\nORDER BY Release_Date DESC\n```\n:::\n",
    "supporting": [
      "1_organizing_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}